############
# Settings #
############
# http://alexyu.se/content/2012/04/tmux-and-irssi-sitting-tree

# Define default shell
set -g default-command /usr/bin/fish

# Start numbering at 1
#set -g base-index 1
#setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set the history
set -g history-limit 100000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Status bar configuration
set -g status-utf8 on
#set -g status-justify centre
#set -g status-interval 60
#set -g status-left-length 40

# Status bar data
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
#set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

# Enable the mouse
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
# setw -g mode-mouse off

# Settings tmux for 256 colors
set -g default-terminal "screen-256color"

# enable vi keys.
setw -g mode-keys vi

################
# Key bindings #
################

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
unbind C-b

# Key for the last window looked at
bind-key l last-window

# Bind a to send command to interior tmux session
bind-key a send-prefix

# reload source file
#bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Allows us to use C-a a <command> to send commands
# to a TMUX session inside another TMUX session
bind-key C-a send-prefix

# Vertical and horizontal splitting
unbind n
unbind v
bind v split-window -h
bind n split-window -v

# Home row movement between panes
#bind -n M-h select-pane -L
#bind -n M-j select-pane -D
#bind -n M-k select-pane -U
#bind -n M-l select-pane -R
# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Cycle through windows
bind -r M-h select-window -t :-
bind -r M-l select-window -t :+

# Resizing Panes
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5

# Maximize and restore a pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# vi like keybindings
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Pipe the current pane to a log file with Shift-H - Press Shift-H again to stop.
bind-key H pipe-pane -o "cat >>$HOME/#W-tmux.log" \; display-message "Toggled logging to $HOME/#W-tmux.log"

# Sync panes - send what you're typing to other panes.
bind C-s set-window-option synchronize-panes

#CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"
