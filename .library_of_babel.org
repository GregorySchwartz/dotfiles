#+NAME: localize
#+HEADER: :exports none
#+HEADER: :var file="" folder="remote" srcinfo=(org-babel-get-src-block-info) path="relative"
#+BEGIN_SRC emacs-lisp
   (let* ((rpath (string-remove-suffix "]]" (string-remove-prefix "[[file:" file)))
          (rfile (file-name-nondirectory rpath))
          (ldir (file-name-directory buffer-file-name))
          (lfile (concat (file-name-as-directory (concat ldir folder)) rfile))
         )
     (copy-file rfile lfile 1)
     (if (equal path "absolute")
        (concat "[[file:" lfile "]]")
        (concat "[[file:" (file-relative-name lfile ldir) "]]")
     )
   )
#+END_SRC

# If the file is saved within the code, omit ":file" and instead supply the
# "file" var in localize(), make sure to have it remote if remote, and use
# ":results raw output".

# Example usage with ":file":

# #+NAME: example
# #+HEADER: :dir /ssh:gw@host:/home/gw/
# #+HEADER: :file example.svg
# #+HEADER: :results output raw graphics
# #+HEADER: :exports both
# #+HEADER: :width 7 :height 4
# #+HEADER: :post localize(*this*, folder = "remote")
# #+BEGIN_SRC R
# library("ggplot2")
# library("RColorBrewer")
# df = read.csv("data.csv")
# ggplot(df, aes(x = value, color = sample)) +
#     geom_density() +
#     scale_color_brewer(palette = "Set1") +
#     guides(color = FALSE)
# #+END_SRC

# #+RESULTS: example
# [[file:remote/example.svg]]

# Example usage without ":file":

# #+NAME: example
# #+HEADER: :dir /ssh:gw@host:/home/gw/
# #+HEADER: :results output raw
# #+HEADER: :exports both
# #+HEADER: :var savefile="example.svg"
# #+HEADER: :post localize(*this*, folder = "remote", file = "/ssh:gw@host:/home/gw/example.svg")
# #+BEGIN_SRC R
# library("ggplot2")
# library("RColorBrewer")
# df = read.csv("data.csv")
# p = ggplot(df, aes(x = value, color = sample)) +
#       geom_density() +
#       scale_color_brewer(palette = "Set1") +
#       guides(color = FALSE)
# svg(savefile)
# print(p)
# dev.off()
# print(savefile)
# #+END_SRC

# #+RESULTS: example
# [[file:remote/example.svg]]

#+NAME: localizeOld
#+HEADER: :exports none
#+BEGIN_SRC emacs-lisp :var file="" srcinfo=(org-babel-get-src-block-info) folder="remote" path="relative"
   (let* ((rdir (cdr (assoc :dir (nth 2 srcinfo))))
          (ldir (file-name-directory buffer-file-name))
          (fil (cdr (assoc :file (nth 2 srcinfo))))
          (rfile (concat (file-name-as-directory rdir) fil))
          (lfile (concat (file-name-as-directory (concat ldir folder)) fil))
         )
     (copy-file rfile lfile 1)
     (if (equal path "absolute")
        (concat "[[file:" lfile "]]")
        (concat "[[file:" (file-relative-name lfile ldir) "]]")
     )
   )
#+END_SRC
